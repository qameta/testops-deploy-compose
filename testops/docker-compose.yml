version: "3.9"

services:

  testops:
    restart: always
    image: ${IMAGES_REGISTRY}/${IMAGES_REPO}/testops:${RELEASE_TO_DEPLOY}
    container_name: testops
    networks:
      - testops-net
    ports:
      - "${TESTOPS_INSTANCE_PORT}:${TESTOPS_CONTAINER_PORT}"
    healthcheck:
      test: "curl -f http://localhost:${TESTOPS_CONTAINER_PORT}/api/management/health || exit 1"
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 20s
    environment:
      TLS_ENDPOINTS: ${TLS_ENDPOINTS}
      SPRING_PROFILES_ACTIVE: compose
      SPRING_CLOUD_CONSUL_ENABLED: "false"
      SPRING_OUTPUT_ANSI_ENABLED: never
      ALLURE_JWT_SECRET: ${TESTOPS_JWT_SECRET}
      ALLURE_SECURE: ${TESTOPS_SECURE_COOKIE}
      ALLURE_JWT_ACCESS_TOKEN_VALIDITY_SECONDS: ${TESTOPS_SESSION_DURATION}
      ALLURE_MAIL_ROOT: ${FIRST_ADMIN_EMAIL}
      ALLURE_ENDPOINT: ${TESTOPS_PROTO}://${TESTOPS_INSTANCE_URL}
      ALLURE_CRYPTO_PASSWORD: ${TESTOPS_CRYPTO_PASSWORD}

      # legacy parameters for users registration, leave as they are defined
      ALLURE_REGISTRATION_AUTOAPPROVE: false
      ALLURE_REGISTRATION_ENABLED: false

      # default role for a new user added as system managed account
      ALLURE_REGISTRATION_DEFAULT_ROLE: ROLE_GUEST

      SPRING_SESSION_STORE_TYPE: REDIS
      SPRING_DATA_REDIS_HOST: ${REDIS_HOST}
      SPRING_DATA_REDIS_PORT: ${REDIS_PORT}
      SPRING_DATA_REDIS_PASSWORD: ${REDIS_PASS}
      SPRING_DATA_REDIS_DATABASE: ${REDIS_DB}
      
      # SPRING_MAIL_ are mandatory for all types of authentication
      SPRING_MAIL_HOST: ${SMTP_HOST}
      SPRING_MAIL_PORT: ${SMTP_PORT}
      SPRING_MAIL_USERNAME: ${SMTP_USERNAME}
      SPRING_MAIL_PASSWORD: ${SMTP_PASSWORD}
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH: ${SMTP_AUTH}
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE: ${SMTP_STARTTLS_ENABLE}
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_REQUIRED: ${SMTP_STARTTLS_REQUIRED}
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_SSL_ENABLE: ${SMTP_SSL_ENABLE}
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_SSL_TRUST: ${SMTP_SSL_TRUST}
      ALLURE_MAIL_FROM: ${SMTP_MAIL_FROM}

      # Uncomment to allow TLS DB endpoint with self-signed certificates
      #TLS_DB_ENDPOINTS: ${TLS_DB_ENDPOINTS}

      # Database main datasource and connection pool settings
      SPRING_DATASOURCE_URL: jdbc:postgresql://${TESTOPS_DB_HOST}:${TESTOPS_DB_PORT}/${TESTOPS_DB_NAME}?assumeMinServerVersion=15&ApplicationName=${TESTOPS_SERVICE_NAME}
      SPRING_DATASOURCE_USERNAME: ${TESTOPS_DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${TESTOPS_DB_PASS}
      SPRING_DATASOURCE_HIKARI_MINIMUMIDLE: ${TESTOPS_DB_MINIMUM_IDLE}
      SPRING_DATASOURCE_HIKARI_MAXIMUMPOOLSIZE: ${TESTOPS_DB_MAXIMUM_POOL_SIZE}
      SPRING_DATASOURCE_HIKARI_CONNECTIONTIMEOUT: ${TESTOPS_DB_CONNECTION_TIMEOUT}
      SPRING_DATASOURCE_HIKARI_MAXLIFETIME: ${TESTOPS_DB_CONNECTION_MAX_LIFE_TIME}
      SPRING_DATASOURCE_HIKARI_IDLETIMEOUT: ${TESTOPS_DB_CONNECTION_IDLE_TIMEOUT}

      # Database uploader datasource and connection pool settings
      SPRING_DATASOURCEUPLOADER_URL: jdbc:postgresql://${TESTOPS_UPLOADER_DB_HOST}:${TESTOPS_UPLOADER_DB_PORT}/${TESTOPS_UPLOADER_DB_NAME}?assumeMinServerVersion=15&ApplicationName=${TESTOPS_UPLOADER_SERVICE_NAME}
      SPRING_DATASOURCEUPLOADER_USERNAME: ${TESTOPS_UPLOADER_DB_USERNAME}
      SPRING_DATASOURCEUPLOADER_PASSWORD: ${TESTOPS_UPLOADER_DB_PASS}
      SPRING_DATASOURCEUPLOADER_HIKARI_MINIMUMIDLE: ${TESTOPS_UPLOADER_DB_MINIMUM_IDLE}
      SPRING_DATASOURCEUPLOADER_HIKARI_MAXIMUMPOOLSIZE: ${TESTOPS_UPLOADER_DB_MAXIMUM_POOL_SIZE}
      SPRING_DATASOURCEUPLOADER_HIKARI_CONNECTIONTIMEOUT: ${TESTOPS_UPLOADER_DB_CONNECTION_TIMEOUT}
      SPRING_DATASOURCEUPLOADER_HIKARI_MAXLIFETIME: ${TESTOPS_UPLOADER_DB_CONNECTION_MAX_LIFE_TIME}
      SPRING_DATASOURCEUPLOADER_HIKARI_IDLETIMEOUT: ${TESTOPS_UPLOADER_DB_CONNECTION_IDLE_TIMEOUT}

      # Database analytics datasource and connection pool settings
      SPRING_DATASOURCEANALYTICS_URL: jdbc:postgresql://${TESTOPS_ANALYTICS_DB_HOST}:${TESTOPS_ANALYTICS_DB_PORT}/${TESTOPS_ANALYTICS_DB_NAME}?assumeMinServerVersion=15&ApplicationName=${TESTOPS_ANALYTICS_SERVICE_NAME}
      SPRING_DATASOURCEANALYTICS_USERNAME: ${TESTOPS_ANALYTICS_DB_USERNAME}
      SPRING_DATASOURCEANALYTICS_PASSWORD: ${TESTOPS_ANALYTICS_DB_PASS}
      SPRING_DATASOURCEANALYTICS_HIKARI_MINIMUMIDLE: ${TESTOPS_ANALYTICS_DB_MINIMUM_IDLE}
      SPRING_DATASOURCEANALYTICS_HIKARI_MAXIMUMPOOLSIZE: ${TESTOPS_ANALYTICS_DB_MAXIMUM_POOL_SIZE}
      SPRING_DATASOURCEANALYTICS_HIKARI_CONNECTIONTIMEOUT: ${TESTOPS_ANALYTICS_DB_CONNECTION_TIMEOUT}
      SPRING_DATASOURCEANALYTICS_HIKARI_MAXLIFETIME: ${TESTOPS_ANALYTICS_DB_CONNECTION_MAX_LIFE_TIME}
      SPRING_DATASOURCEANALYTICS_HIKARI_IDLETIMEOUT: ${TESTOPS_ANALYTICS_DB_CONNECTION_IDLE_TIMEOUT}

      # Database migration datasource and connection pool settings
      SPRING_DATASOURCEMIGRATION_URL: jdbc:postgresql://${TESTOPS_MIGRATION_DB_HOST}:${TESTOPS_MIGRATION_DB_PORT}/${TESTOPS_MIGRATION_DB_NAME}?assumeMinServerVersion=15&ApplicationName=${TESTOPS_MIGRATION_SERVICE_NAME}
      SPRING_DATASOURCEMIGRATION_USERNAME: ${TESTOPS_MIGRATION_DB_USERNAME}
      SPRING_DATASOURCEMIGRATION_PASSWORD: ${TESTOPS_MIGRATION_DB_PASS}
      SPRING_DATASOURCEMIGRATION_HIKARI_MINIMUMIDLE: ${TESTOPS_MIGRATION_DB_MINIMUM_IDLE}
      SPRING_DATASOURCEMIGRATION_HIKARI_MAXIMUMPOOLSIZE: ${TESTOPS_MIGRATION_DB_MAXIMUM_POOL_SIZE}
      SPRING_DATASOURCEMIGRATION_HIKARI_CONNECTIONTIMEOUT: ${TESTOPS_MIGRATION_DB_CONNECTION_TIMEOUT}
      SPRING_DATASOURCEMIGRATION_HIKARI_MAXLIFETIME: ${TESTOPS_MIGRATION_DB_CONNECTION_MAX_LIFE_TIME}
      SPRING_DATASOURCEMIGRATION_HIKARI_IDLETIMEOUT: ${TESTOPS_MIGRATION_DB_CONNECTION_IDLE_TIMEOUT}

      ALLURE_MIGRATION_TASK_SCHEDULER_POOL_SIZE: ${TESTOPS_DB_MIGRATION_TASK_SCHEDULER_POOL_SIZE}
      
      # RabbitMQ
      SPRING_RABBITMQ_HOST: ${RABBIT_HOST}
      SPRING_RABBITMQ_PORT: ${RABBIT_PORT}
      SPRING_RABBITMQ_USERNAME: ${RABBIT_USER}
      SPRING_RABBITMQ_PASSWORD: ${RABBIT_PASS}
      ALLURE_UPLOAD_PARSE_CONSUMERSPERQUEUE: ${TESTOPS_RABBIT_PARSE_CONSUMERS_PER_QUEUE}
      ALLURE_UPLOAD_PARSE_PREFETCHCOUNT: ${TESTOPS_RABBIT_PARSE_PREFETCH_COUNT}
      ALLURE_UPLOAD_STORE_CONSUMERSPERQUEUE: ${TESTOPS_RABBIT_STORE_CONSUMERS_PER_QUEUE}
      ALLURE_UPLOAD_STORE_PREFETCHCOUNT: ${TESTOPS_RABBIT_STORE_PREFETCH_COUNT}
      ALLURE_UPLOAD_STORECOMPLETE_CONSUMERSPERQUEUE: ${TESTOPS_RABBIT_STORE_COMPLETE_CONSUMERS_PER_QUEUE}
      ALLURE_UPLOAD_STORECOMPLETE_PREFETCHCOUNT: ${TESTOPS_RABBIT_STORE_COMPLETE_PREFETCH_COUNT}

      ALLURE_BLOBSTORAGE_TYPE: S3
      ALLURE_BLOBSTORAGE_S3_PATHSTYLEACCESS: ${TESTOPS_S3_PATHSTYLE}
      ALLURE_BLOBSTORAGE_S3_ENDPOINT: ${TESTOPS_S3_URL}
      ALLURE_BLOBSTORAGE_S3_BUCKET: ${TESTOPS_S3_BUCKET}
      ALLURE_BLOBSTORAGE_S3_REGION: ${TESTOPS_S3_REGION}
      ALLURE_BLOBSTORAGE_S3_ACCESSKEY: ${TESTOPS_S3_ACCESS_KEY}
      ALLURE_BLOBSTORAGE_S3_SECRETKEY: ${TESTOPS_S3_SECRET_KEY}
      ALLURE_BLOBSTORAGE_MAXCONCURRENCY: ${TESTOPS_S3_MAXCONCURRENCY}
      
      ALLURE_SCHEDULER_CLEANER_BLOB_BATCHSIZE: ${TESTOPS_SCHEDULER_CLEANER_BLOB_BATCHSIZE}
      ALLURE_TASKEXECUTOR_COREPOOLSIZE: ${TESTOPS_TASKEXECUTOR_COREPOOLSIZE}
      ALLURE_REDIS_SESSIONTTL: ${INACTIVE_USER_SESSION_EXPIRATION}
      MANAGEMENT_PROMETHEUS_METRICS_EXPORT_ENABLED: 'true'
      MANAGEMENT_HEALTH_DISKSPACE_ENABLED: 'false'
      MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: health,info,prometheus,configprops
      MANAGEMENT_ENDPOINT_HEALTH_CACHE_TIME-TO-LIVE: 15s
      LOGGING_LEVEL_IO_QAMETA_ALLURE: warn
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY: warn
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK: warn
      LOGGING_LEVEL_COM_ZAXXER_HIKARI: warn
      SERVER_ERROR_INCLUDE_STACKTRACE: always

      # Login settings
      ALLURE_LOGIN_PRIMARY: system

      TZ: ${TZ}
      JAVA_TOOL_OPTIONS: >
        -XX:+UseG1GC
        -XX:+UseStringDeduplication
        -XX:MinHeapFreeRatio=15
        -XX:MaxHeapFreeRatio=30
        -Dsun.jnu.encoding=UTF-8
        -Dfile.encoding=UTF-8
    logging:
      driver: "json-file"
      options:
        max-size: "10mb"


  redis:
    restart: always
    image: bitnami/redis:6.2
    container_name: redis
    networks:
      - testops-net
    environment:
      TZ: ${TZ}
      REDIS_PASSWORD: ${REDIS_PASS}
      REDIS_PORT_NUMBER: ${REDIS_PORT}
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 1s
      timeout: 3s
      retries: 30

  rabbitmq:
    restart: always
    image: rabbitmq:3.9-management
    container_name: rabbitmq
    networks:
      - testops-net
    volumes:
      - rabbitmq-volume:/var/lib/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBIT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBIT_PASS}

  autoheal:
    restart: always
    container_name: autoheal
    image: willfarrell/autoheal
    environment:
      AUTOHEAL_CONTAINER_LABEL: all
      AUTOHEAL_INTERVAL: 30
      AUTOHEAL_START_PERIOD: 60
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

networks:
  testops-net:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.100.0/24

volumes:
  rabbitmq-volume:
